"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
extend type Query {
    me: User @auth
}

extend type Mutation {
  login(email: String!, password: String!): String!
  register(input: RegisterInput! @spread): RegisterResponse!
  verifyEmail(input: VerifyEmailInput! @spread): Boolean!
  forgotPassword(input: ForgotPasswordInput! @spread): Boolean
  resetPassword(input: ResetPasswordInput! @spread): String

  logout: Boolean @guard
}

type RegisterResponse {
    message: String!
}

type User {
    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
    moderatedCommunities: [Community!]! @belongsToMany
    subscribedCommunities: [Community!]! @belongsToMany
}

input RegisterInput {
    name: String!
    email: String! @rules(apply: ["required", "email", "unique:users,email"])
    password: String! @rules(apply: ["required", "confirmed", "min:8"])
    password_confirmation: String!
    callbackUrl: String! @rules(apply: ["required", "url"])
}

input ForgotPasswordInput {
    email: String! @rules(apply: ["required", "email"])
    callbackUrl: String! @rules(apply: ["required", "url"])
}

input VerifyEmailInput {
    token: String!
}

input ResetPasswordInput {
    token: String!
    email: String! @rules(apply: ["required", "email"])
    password: String! @rules(apply: ["required", "confirmed", "min:8"])
    password_confirmation: String!
}
